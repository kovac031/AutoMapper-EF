- kad napravis DAL layer
	- add new item 
		- ADO NET Entity Data Model
			- ime EFContext
			- code first from database
			- spoji se s bazom ako nema ponudjeno
			- konekciju nazovi drukcije, npr DBconnection

- sad je spojen s bazom

* ako bude promjena na tablicama u bazi, neznam kako updejt, ali moze skrljati DAL i napravit ponovo

...

- instaliram Autofaci Autofac.WebApi2 u WebAPI // Autofac.Mvc5 za MVC

- instaliram Entity Framework 6.4.4 (EF6) u DAL i Repository (a u MVC i u MVC, jer ce ga trazit u webcongifu)
	- bez ovoga ne vidi stvari iz dependency injection u repozitoriju i DBcontext u EFContext u DAL
	- potrebno za mapiranje kada nemamo direktnu konekciju i SQL komande

- DIConfig (svejedno ime) klasa u App_Start:

* za WebAPI *

public class DIConfig
    {
        public static void Configure()
        {
            var builder = new ContainerBuilder();
            var config = GlobalConfiguration.Configuration;

            // Register your Web API controllers.
            builder.RegisterApiControllers(Assembly.GetExecutingAssembly());

            builder.RegisterType<EFContext>().AsSelf();
            builder.RegisterType<StudentService>().As<IService>();
            builder.RegisterType<StudentRepository>().As<IRepository>();

            var container = builder.Build();
            config.DependencyResolver = new AutofacWebApiDependencyResolver(container);
        }
    }

* za MVC * 

public class DIConfig
    {
        public static void Configure()
        {    
            var builder = new ContainerBuilder();
            builder.RegisterControllers(typeof(MvcApplication).Assembly);

            builder.RegisterType<EFContext>().AsSelf();

            builder.RegisterType<EFContext>().AsSelf();
            builder.RegisterType<StudentService>().As<IService>();
            builder.RegisterType<StudentRepository>().As<IRepository>();

            var container = builder.Build();
            DependencyResolver.SetResolver(new AutofacDependencyResolver(container));
        }
    }

- u Global.asax dodati DIConfig.Configure(); na kraj
	- prolazi Configure() i ConfigureContainer() ali mora i u DIConfig i u Global.asax biti isto nazvano jel, poziva se metoda

- u kontroleru Web.config dodati connection string jer se sad spajam sa EF a ne direkt:

<connectionStrings>
	<add name="DBconnection" connectionString="data source=VREMENSKISTROJ;initial catalog=JustStudents;integrated security=True;MultipleActiveResultSets=True;App=EntityFramework" providerName="System.Data.SqlClient" />
</connectionStrings>

-----------AUTOMAPPER------------

- u Common pravis klasu MapperProfile

- instaliras AutoMapper i AutoMapper.Extensions.Microsoft.DependencyInjection u class library gdje ce ga se koristit:
	- Common zbog MappingProfile, Repository jer tamo mapira, Model jer je tamo StudentDTO, DAL jer je tamo Student, WebAPI jer je tamo DIConfig (ali u MVC se isto mapira u kontroleru)
	- zbog Entity Framework 4.7.2 korisiti Automapper 9 i AutoMapper.Extensions.Microsoft.DependencyInjection 7 ... * u ovoj fazi sve jos radi, instalacija nece pokidati kod

- dodati u DIConfig:

		var mapperConfig = new MapperConfiguration(mc =>
            	{
                mc.AddProfile(new MappingProfile());
            	});
            	IMapper mapper = mapperConfig.CreateMapper();
            	builder.RegisterInstance(mapper).As<IMapper>();

****************************************************************************************
------------------------------------ WEB API ---------------------------------------------

- get all i get one by id nema problema
- create trazi unos svih stavki koji nisu mapirane u repozitoriju
- edit prolazi bilo sta sta mu zadamo, jer smo u MapperProfie definirali iznimke
- delete nikaki problem

----------- SORTING, FILTERING, PAGING ---------

- odlucio rucno parametre i sa LINQ

- realno ne svidja mi se milijun parametara, ali lakse mi je bilo tako jer je alternativa ili
	- kao sortBy, sa rucnim definiranjem case, nema smisla jer treba sve kombinacije
	- nesto kao sto sam u PlayPalMiniWebAPI sa klasama koje imaju parametre koje mi trebaju, pa metoda poziva klase za parametre
	- nisam jos na ovaj nacin pa reko idem

****************************************************************************************
------------------------------------ MVC -----------------------------------------------------

- kad napravis metodu -> desni klik Add View ... template, model class (View), i reference checbox treba (ono zadnje valjda uredi, bez toga je view sao podaci bez stila)

- ja sam RouteConfig podesio da otvara getall umjesto index

- zbog circular dependency kod mapiranja StudentDTO<->StudentView, premjestio sam StudentView iz kontroler Modela u Model folder sa StudentDTO
	- compilation error sam rjesio tako sto sam skrljao view i napravio novi, samo ispravit @model nije proslo

- sorting, filtering paging je komplicirano sazeti, pogledati u kontroleru i cshtml sta sam napravio

- za paging instalirat paginglist i paginglist.mvc
